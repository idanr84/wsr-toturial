import { inputTestkitFactory,dropdownTestkitFactory, checkboxTestkitFactory , buttonTestkitFactory, cardHeaderTestkitFactory} from 'wix-style-react/dist/testkit/puppeteer';

function getElement(selector) {
  return page.waitForSelector(selector)
}


describe('React application', () => {
  // it('should display title', async () => {
  //   await page.goto(app.getUrl('/'));
  //
  //   await page.waitForSelector('h2');
  //   expect(await page.$eval('h2', e => e.textContent)).toEqual(
  //     'This project was generated by yoshi!',
  //   );
  // });

  it('should Fill the form and expect the "Submitted Info" section to be displayed.', async () => {

    await page.goto(app.getUrl('/'));
    const inputDriver = await inputTestkitFactory({dataHook: 'wsr-form-name', page}); //puppeteer page instance
    await inputDriver.enterText('my name is idan');

    const {dropdownLayoutDriver} = await dropdownTestkitFactory({dataHook: 'wsr-form-color', page}); //puppeteer page instanceawait driver.focus()
    await dropdownLayoutDriver.clickAtOption(2)

    const checkboxUniDriver = await checkboxTestkitFactory({dataHook: 'wsr-form-checkbox-terms', page}); //puppeteer page instanceawait driver.focus()
    await checkboxUniDriver.click()

    const buttonTestkitFactory = await checkboxTestkitFactory({dataHook: 'button-submit', page}); //puppeteer page instanceawait driver.focus()
    await buttonTestkitFactory.click()


    const cardHeaderTestFactory = await cardHeaderTestkitFactory({dataHook: 'submitted-form', page}); //puppeteer page instanceawait driver.focus()
    expect(await cardHeaderTestFactory.exists()).toBeTruthy()
  });

  it('should Fill the form without the terms, click the submit and expect the submittion to fail.', async () => {

    await page.goto(app.getUrl('/'));
    const inputDriver = await inputTestkitFactory({dataHook: 'wsr-form-name', page}); //puppeteer page instance
    await inputDriver.enterText('my name is idan');

    const {dropdownLayoutDriver} = await dropdownTestkitFactory({dataHook: 'wsr-form-color', page}); //puppeteer page instanceawait driver.focus()
    await dropdownLayoutDriver.clickAtOption(2)

    const buttonTestkitFactory = await checkboxTestkitFactory({dataHook: 'button-submit', page}); //puppeteer page instanceawait driver.focus()
    await buttonTestkitFactory.click()

    const cardHeaderTestFactory = await cardHeaderTestkitFactory({dataHook: 'submitted-form', page}); //puppeteer page instanceawait driver.focus()
    expect(await cardHeaderTestFactory.exists()).toBeFalsy()

  });
});
